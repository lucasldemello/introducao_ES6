h1. Introdução ao Javascript

* Origem 1995 (Netscape)

* ECMAScript: Especificação de linguagem, serve como base para outras linguagem baseadas em script

* TC39: Comissão que cuida das propostas do ECMAScript, manter e atualizar os padrões para bibliotecas. 

* Fluxo de proposta 
    ** Stage0: strawman (proposta documentada)
    ** Stage1: proposal (campeão responsável, tem que ter exemplos)
    ** Stage2: draft (primeira versão da especificação)
    ** Stage3: candidate (Feedback de implementação e de usuários, especificação completa nessa etapa)
    ** Stage4: finished (passando na suíte de testes, experiencia pratica)

* ES2018
    ** Operadores rest/spread
    ** Iteração assincrona
    ** Promise.prototype.finally()

* ES.Next
    ** Implementações futuras, podem ser vistas no babel. 

h1. Conceitos 

* Linguagem interpretada. 

* Linguagem de tipagem fraca e dinâmica.

* Typescript (superset, adiciona funcionalidades que o java não tem por default)

* Flow (versão mais simplificada do Typescript)

* Funções de primeira classe e ordem maior 

* Closure (escopo léxico)
    ** escopo global, função, bloco.

* Currying
    ** reaproveitar parametros.

* Hoisting 
    ** Levantar ou suspender algo. 
    ** Basicamente as fu

* Imutabilidade 
    ** Em linguagem funcional os dados nuncam mudam, se tu precisa mudar ela se cria uma nova. 
    ** Podemos simular isso em Javascript

* Tipos e variáveis
    ** 3 formas de criar uma variável dentro dos scopos (global, funcao, bloco)
    *** var: não entende escopo de bloco, somente funcao e global
    *** let: respeita escopo de bloco
    *** const: respeita escopo de bloco. tipo primitivo não permite mudar, tipo objeto e array permite alterar seu conteudo.


    ** 6 tipos primitivos: string, number, boolean, null, undefined e symboll 
    ** 3 outros tipos: object, function e array.
    ** typeof null retorna um objeto.

